/*Implementation of stack using array*/ 
#include<stdio.h>
#include<stdlib.h>
#define ss 3//initializing the array size
int mstack[3],top=-1;//initializing top value to -1
/*push operation function*/
void push(int ele)
{
if(top==ss-1)
{
printf("stack is full\n");
return;
}
top++;
mstack[top]=ele;
printf("element pushed is %d",mstack[top]);
}
?*pop operation function*/
int pop()
{
if(top==-1)
{
printf("stack is empty\n");
return -1;
}
int ele=mstack[top];
top--;
printf("element popped is %d\n",ele);
}
/*size operation function*/
void size()
{
printf("size of stack is %d\n", top++);
}
/*display operation function*/
void display()
{
int i;
printf("elements are:");
for(i=0;i<top;i++)
{
printf("%d  ",mstack[i]);
}
printf("\n");
}
/*main function*/
void main()
{
int choice,ele;
printf("1.push\n2.pop\n3.size\n4.display\n5.exit\n");
while(1)
{
printf("enter your choice");
scanf("%d",&choice);
switch(choice)
{
case 1:
printf("enter element to push");
scanf("%d",&ele);
push(ele);
break;
case 2:
pop();
break;
case 3:
size();
break;
case 4:
display();
break;
case 5:
exit(0);
}
}
}
